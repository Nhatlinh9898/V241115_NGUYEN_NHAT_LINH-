package ra.exam_webapp.config;

import org.springframework.web.filter.CharacterEncodingFilter;
import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

import javax.servlet.Filter;

public class DispatcherServletInit extends AbstractAnnotationConfigDispatcherServletInitializer {
    @Override
    protected Class<?>[] getRootConfigClasses() {
        return new Class[]{HibernateConfig.class};
    }

    @Override
    protected Class<?>[] getServletConfigClasses() {
        return new Class[]{MVCConfig.class};
    }

    @Override
    protected String[] getServletMappings() {
        return new String[]{"/"};
    }

    @Override
    protected Filter[] getServletFilters() {
        CharacterEncodingFilter filter = new CharacterEncodingFilter("UTF-8", true);
        return new Filter[]{filter};
    }
}



//D∆∞·ªõi ƒë√¢y l√† phi√™n b·∫£n c·ªßa m√£ ngu·ªìn v·ªõi c√°c ghi ch√∫ chi ti·∫øt ƒë·ªÉ gi·∫£i th√≠ch t·ª´ng ph·∫ßn:
//

//package ra.demoproject.config;
//
//import org.springframework.web.filter.CharacterEncodingFilter;
//import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;
//
//import javax.servlet.Filter;
//
///**
// * DispatcherServletInit l√† l·ªõp kh·ªüi t·∫°o Dispatcher Servlet, c·∫•u h√¨nh ·ª©ng d·ª•ng Spring MVC.
// * N√≥ k·∫ø th·ª´a AbstractAnnotationConfigDispatcherServletInitializer ƒë·ªÉ x√°c ƒë·ªãnh c√°c c√†i ƒë·∫∑t c·∫•u h√¨nh ·ª©ng d·ª•ng.
// */
//public class DispatcherServletInit extends AbstractAnnotationConfigDispatcherServletInitializer {
//
//    /**
//     * X√°c ƒë·ªãnh c√°c l·ªõp c·∫•u h√¨nh g·ªëc (Root Configuration).
//     * C√°c l·ªõp n√†y ch·ªãu tr√°ch nhi·ªám c·∫•u h√¨nh to√†n b·ªô ·ª©ng d·ª•ng, bao g·ªìm Hibernate, ngu·ªìn d·ªØ li·ªáu, giao d·ªãch, v.v.
//     *
//     * @return M·∫£ng c√°c l·ªõp c·∫•u h√¨nh g·ªëc c·ªßa ·ª©ng d·ª•ng.
//     */
//    @Override
//    protected Class<?>[] getRootConfigClasses() {
//        return new Class[]{HibernateConfig.class}; // C·∫•u h√¨nh Hibernate v√† c√°c th√†nh ph·∫ßn backend
//    }
//
//    /**
//     * X√°c ƒë·ªãnh c√°c l·ªõp c·∫•u h√¨nh d√†nh ri√™ng cho Servlet.
//     * ƒê√¢y l√† n∆°i ch·ª©a c√°c c·∫•u h√¨nh li√™n quan ƒë·∫øn Spring MVC nh∆∞ View Resolver, Controller Mapping, v.v.
//     *
//     * @return M·∫£ng c√°c l·ªõp c·∫•u h√¨nh d√†nh ri√™ng cho Servlet.
//     */
//    @Override
//    protected Class<?>[] getServletConfigClasses() {
//        return new Class[]{MVCConfig.class}; // C·∫•u h√¨nh Spring MVC
//    }
//
//    /**
//     * X√°c ƒë·ªãnh √°nh x·∫° Servlet.
//     * "/"" c√≥ nghƒ©a l√† t·∫•t c·∫£ c√°c request s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω b·ªüi DispatcherServlet.
//     *
//     * @return M·∫£ng √°nh x·∫° Servlet.
//     */
//    @Override
//    protected String[] getServletMappings() {
//        return new String[]{"/"}; // M·ªçi request s·∫Ω ƒë∆∞·ª£c ƒë·ªãnh tuy·∫øn th√¥ng qua DispatcherServlet
//    }
//
//    /**
//     * C·∫•u h√¨nh c√°c b·ªô l·ªçc (Filters) cho Dispatcher Servlet.
//     * CharacterEncodingFilter ƒë·∫£m b·∫£o r·∫±ng c√°c request v√† response s·ª≠ d·ª•ng m√£ h√≥a UTF-8.
//     *
//     * @return M·∫£ng c√°c b·ªô l·ªçc ƒë∆∞·ª£c √°p d·ª•ng.
//     */
//    @Override
//    protected Filter[] getServletFilters() {
//        return new Filter[]{new CharacterEncodingFilter("UTF-8", true)}; // B·ªô l·ªçc m√£ h√≥a k√Ω t·ª± UTF-8
//    }
//}

//
//        ### Gi·∫£i th√≠ch t·ªïng th·ªÉ:
//        - **L·ªõp `DispatcherServletInit`**: L·ªõp n√†y m·ªü r·ªông `AbstractAnnotationConfigDispatcherServletInitializer`, cho ph√©p c·∫•u h√¨nh ·ª©ng d·ª•ng Spring th√¥ng qua c√°c l·ªõp Java thay v√¨ t·ªáp XML.
//        - **Ph∆∞∆°ng th·ª©c `getRootConfigClasses()`**: Cung c·∫•p c√°c l·ªõp c·∫•u h√¨nh ch√≠nh, th∆∞·ªùng bao g·ªìm c√†i ƒë·∫∑t Hibernate, k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu v√† c√°c th√†nh ph·∫ßn backend kh√°c.
//- **Ph∆∞∆°ng th·ª©c `getServletConfigClasses()`**: Ch·ªâ ƒë·ªãnh c√°c l·ªõp c·∫•u h√¨nh li√™n quan ƒë·∫øn Spring MVC, ch·∫≥ng h·∫°n nh∆∞ b·ªô ƒëi·ªÅu khi·ªÉn, view resolver, v√† c√°c c√†i ƒë·∫∑t frontend kh√°c.
//        - **Ph∆∞∆°ng th·ª©c `getServletMappings()`**: X√°c ƒë·ªãnh √°nh x·∫° URL, quy·∫øt ƒë·ªãnh c√°ch DispatcherServlet x·ª≠ l√Ω c√°c request t·ª´ client.
//        - **Ph∆∞∆°ng th·ª©c `getServletFilters()`**: C·∫•u h√¨nh b·ªô l·ªçc ƒë·ªÉ x·ª≠ l√Ω m√£ h√≥a k√Ω t·ª± gi√∫p tr√°nh l·ªói khi l√†m vi·ªác v·ªõi Unicode v√† d·ªØ li·ªáu kh√¥ng ph·∫£i ASCII.
//
//Vi·ªác th√™m c√°c ghi ch√∫ n√†y gi√∫p m√£ ngu·ªìn d·ªÖ hi·ªÉu h∆°n, gi√∫p b·∫°n ho·∫∑c c√°c l·∫≠p tr√¨nh vi√™n kh√°c d·ªÖ d√†ng duy tr√¨ v√† m·ªü r·ªông ch·ª©c nƒÉng trong t∆∞∆°ng lai. B·∫°n c√≥ c·∫ßn th√™m ghi ch√∫ n√†o c·ª• th·ªÉ h∆°n kh√¥ng? üöÄ
