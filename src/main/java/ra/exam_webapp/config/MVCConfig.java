package ra.exam_webapp.config;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.thymeleaf.spring5.SpringTemplateEngine;
import org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver;
import org.thymeleaf.spring5.view.ThymeleafViewResolver;
import org.thymeleaf.templatemode.TemplateMode;

import static ra.exam_webapp.service.student.StudentServiceImpl.UPLOAD_DIR;

@Configuration
@EnableWebMvc
@ComponentScan(basePackages = "ra.exam_webapp")
public class MVCConfig implements WebMvcConfigurer, ApplicationContextAware {
    private ApplicationContext applicationContext;
    @Override
    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        this.applicationContext = applicationContext;
    }
    // c·∫•u h√¨nh view thymeleaf
    @Bean
    public SpringResourceTemplateResolver templateResolver(){
        SpringResourceTemplateResolver templateResolver = new SpringResourceTemplateResolver();
        templateResolver.setApplicationContext(applicationContext);
        templateResolver.setPrefix("/views/");
        templateResolver.setSuffix(".html");
        templateResolver.setTemplateMode(TemplateMode.HTML);
        templateResolver.setCharacterEncoding("UTF-8");
        return templateResolver;
    }
    @Bean
    public SpringTemplateEngine templateEngine(){
        SpringTemplateEngine engine = new SpringTemplateEngine();
        engine.setEnableSpringELCompiler(true);
        engine.setTemplateResolver(templateResolver());
        return engine;
    }
    @Bean
    public ThymeleafViewResolver viewResolver(){
        ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();
        viewResolver.setTemplateEngine(templateEngine());
        viewResolver.setCharacterEncoding("UTF-8");
        return viewResolver;
    }


    // c·∫•u h√¨nh upload file
    @Bean(name = "multipartResolver")
    public CommonsMultipartResolver multipartResolver(){
        CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
        multipartResolver.setMaxUploadSize(20971520); // 20MB
        return multipartResolver;
    }
    // c·∫•u h√¨nh ƒë∆∞·ªùng d·∫´n
//    @Override
//    public void addResourceHandlers(ResourceHandlerRegistry registry) {
//        registry.addResourceHandler("/uploads/**")
//                .addResourceLocations("/uploads/");
//    }
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler("/uploads/**")
                .addResourceLocations("file:" + UPLOAD_DIR);
    }


}

//D∆∞·ªõi ƒë√¢y l√† phi√™n b·∫£n m√£ ngu·ªìn c·ªßa b·∫°n v·ªõi c√°c ghi ch√∫ chi ti·∫øt gi√∫p l√†m r√µ t·ª´ng ph·∫ßn c·ªßa c·∫•u h√¨nh MVC trong Spring:
//

//package ra.demoproject.config;
//
//import org.springframework.beans.BeansException;
//import org.springframework.context.ApplicationContext;
//import org.springframework.context.ApplicationContextAware;
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.ComponentScan;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.web.multipart.commons.CommonsMultipartResolver;
//import org.springframework.web.servlet.config.annotation.EnableWebMvc;
//import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
//import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
//import org.thymeleaf.spring5.SpringTemplateEngine;
//import org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver;
//import org.thymeleaf.spring5.view.ThymeleafViewResolver;
//import org.thymeleaf.templatemode.TemplateMode;
//
///**
// * C·∫•u h√¨nh Spring MVC cho ·ª©ng d·ª•ng.
// * S·ª≠ d·ª•ng Thymeleaf l√†m c√¥ng c·ª• render view, h·ªó tr·ª£ upload file, v√† ƒë·ªãnh nghƒ©a c√°c t√†i nguy√™n tƒ©nh.
// */
//@Configuration
//@EnableWebMvc // K√≠ch ho·∫°t Spring MVC.
//@ComponentScan(basePackages = "ra.demoproject") // Qu√©t c√°c component trong package ch√≠nh.
//public class MVCConfig implements WebMvcConfigurer, ApplicationContextAware {
//
//    private ApplicationContext applicationContext;
//
//    /**
//     * Thi·∫øt l·∫≠p ApplicationContext ƒë·ªÉ s·ª≠ d·ª•ng trong vi·ªác c·∫•u h√¨nh c√°c th√†nh ph·∫ßn kh√°c.
//     *
//     * @param applicationContext Context c·ªßa Spring ƒë∆∞·ª£c truy·ªÅn v√†o
//     */
//    @Override
//    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
//        this.applicationContext = applicationContext;
//    }
//
//    // ---------------- C·∫•u h√¨nh Thymeleaf ----------------
//
//    /**
//     * C·∫•u h√¨nh TemplateResolver cho Thymeleaf, gi√∫p x√°c ƒë·ªãnh v·ªã tr√≠ file HTML v√† c√°ch x·ª≠ l√Ω n·ªôi dung.
//     *
//     * @return ƒê·ªëi t∆∞·ª£ng SpringResourceTemplateResolver ƒë√£ c·∫•u h√¨nh.
//     */
//    @Bean
//    public SpringResourceTemplateResolver templateResolver() {
//        SpringResourceTemplateResolver templateResolver = new SpringResourceTemplateResolver();
//        templateResolver.setApplicationContext(applicationContext); // S·ª≠ d·ª•ng context c·ªßa ·ª©ng d·ª•ng.
//        templateResolver.setPrefix("/views/"); // ƒê·ªãnh nghƒ©a th∆∞ m·ª•c ch·ª©a c√°c template Thymeleaf.
//        templateResolver.setSuffix(".html"); // ƒê·ªãnh nghƒ©a ph·∫ßn m·ªü r·ªông c·ªßa file template.
//        templateResolver.setTemplateMode(TemplateMode.HTML); // Ch·∫ø ƒë·ªô x·ª≠ l√Ω HTML.
//        templateResolver.setCharacterEncoding("UTF-8"); // ƒê·∫£m b·∫£o hi·ªÉn th·ªã ti·∫øng Vi·ªát v√† Unicode ƒë√∫ng c√°ch.
//        return templateResolver;
//    }
//
//    /**
//     * Kh·ªüi t·∫°o SpringTemplateEngine ƒë·ªÉ qu·∫£n l√Ω render template.
//     *
//     * @return ƒê·ªëi t∆∞·ª£ng SpringTemplateEngine ƒë√£ c·∫•u h√¨nh.
//     */
//    @Bean
//    public SpringTemplateEngine templateEngine() {
//        SpringTemplateEngine engine = new SpringTemplateEngine();
//        engine.setEnableSpringELCompiler(true); // K√≠ch ho·∫°t Spring Expression Language (SpEL) Compiler.
//        engine.setTemplateResolver(templateResolver()); // √Åp d·ª•ng TemplateResolver ƒë√£ c·∫•u h√¨nh.
//        return engine;
//    }
//
//    /**
//     * C·∫•u h√¨nh Thymeleaf View Resolver, gi√∫p Spring MVC bi·∫øt c√°ch t√¨m v√† render giao di·ªán.
//     *
//     * @return ƒê·ªëi t∆∞·ª£ng ThymeleafViewResolver ƒë√£ c·∫•u h√¨nh.
//     */
//    @Bean
//    public ThymeleafViewResolver viewResolver() {
//        ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();
//        viewResolver.setTemplateEngine(templateEngine()); // S·ª≠ d·ª•ng SpringTemplateEngine ƒë·ªÉ x·ª≠ l√Ω template.
//        viewResolver.setCharacterEncoding("UTF-8"); // ƒê·∫£m b·∫£o h·ªó tr·ª£ Unicode.
//        return viewResolver;
//    }
//
//    // ---------------- C·∫•u h√¨nh Upload File ----------------
//
//    /**
//     * C·∫•u h√¨nh b·ªô x·ª≠ l√Ω upload file, gi·ªõi h·∫°n dung l∆∞·ª£ng t·ªëi ƒëa l√† 20MB.
//     *
//     * @return ƒê·ªëi t∆∞·ª£ng CommonsMultipartResolver ƒë√£ c·∫•u h√¨nh.
//     */
//    @Bean(name = "multipartResolver")
//    public CommonsMultipartResolver multipartResolver() {
//        CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
//        multipartResolver.setMaxUploadSize(20971520); // Gi·ªõi h·∫°n file upload: 20MB.
//        return multipartResolver;
//    }
//
//    // ---------------- C·∫•u h√¨nh ƒê∆∞·ªùng D·∫´n T√†i Nguy√™n ----------------
//
//    /**
//     * ƒê·ªãnh nghƒ©a c√°c ƒë∆∞·ªùng d·∫´n t√†i nguy√™n tƒ©nh, gi√∫p truy xu·∫•t file tƒ©nh trong ·ª©ng d·ª•ng.
//     *
//     * @param registry ƒê·ªëi t∆∞·ª£ng ResourceHandlerRegistry d√πng ƒë·ªÉ ƒëƒÉng k√Ω ƒë∆∞·ªùng d·∫´n.
//     */
//    @Override
//    public void addResourceHandlers(ResourceHandlerRegistry registry) {
//        registry.addResourceHandler("/uploads/**") // B·∫•t k·ª≥ y√™u c·∫ßu n√†o ƒë·∫øn /uploads/** s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω.
//                .addResourceLocations("/uploads/"); // T√†i nguy√™n s·∫Ω ƒë∆∞·ª£c l·∫•y t·ª´ th∆∞ m·ª•c /uploads/.
//    }
//}

//
//        ### **Gi·∫£i th√≠ch t·ªïng th·ªÉ**:
//        - **K√≠ch ho·∫°t Spring MVC**: `@EnableWebMvc` ƒë·∫£m b·∫£o ·ª©ng d·ª•ng ƒë∆∞·ª£c thi·∫øt l·∫≠p ƒë√∫ng ƒë·ªÉ x·ª≠ l√Ω request v√† render view.
//- **Qu√©t c√°c package**: `@ComponentScan("ra.demoproject")` gi√∫p Spring t√¨m th·∫•y c√°c component t·ª± ƒë·ªông.
//        - **C·∫•u h√¨nh Thymeleaf**:
//        - `templateResolver()` x√°c ƒë·ªãnh th∆∞ m·ª•c v√† ki·ªÉu t·ªáp HTML.
//        - `templateEngine()` k√≠ch ho·∫°t tr√¨nh bi√™n d·ªãch Thymeleaf v·ªõi Spring EL Compiler.
//        - `viewResolver()` gi√∫p Spring hi·ªÉu c√°ch render view b·∫±ng Thymeleaf.
//        - **H·ªó tr·ª£ upload file**: `multipartResolver()` cho ph√©p ng∆∞·ªùi d√πng t·∫£i l√™n file, v·ªõi dung l∆∞·ª£ng t·ªëi ƒëa 20MB.
//- **ƒê·ªãnh nghƒ©a ƒë∆∞·ªùng d·∫´n t√†i nguy√™n**: `addResourceHandlers()` gi√∫p truy xu·∫•t t√†i nguy√™n tƒ©nh nh∆∞ ·∫£nh, video t·ª´ th∆∞ m·ª•c `/uploads/`.
//
//C√°c ghi ch√∫ n√†y s·∫Ω gi√∫p b·∫°n d·ªÖ d√†ng hi·ªÉu v√† b·∫£o tr√¨ m√£ ngu·ªìn h∆°n. C√≥ ph·∫ßn n√†o b·∫°n mu·ªën l√†m r√µ th√™m kh√¥ng? üöÄ